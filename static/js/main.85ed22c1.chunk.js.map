{"version":3,"sources":["components/Footer.tsx","components/Header.tsx","components/Input.tsx","components/PlayerTab.tsx","components/Button.tsx","components/PositionOutline.tsx","components/ResultTab.tsx","components/Main.tsx","utils/split-teams.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Wrapper","styled","footer","Footer","HeaderRoot","div","Header","Root","StyledInput","input","ErrorMessage","Input","text","onChange","hint","error","value","placeholder","style","borderBottomColor","Span","span","PlayerTab","player","id","nick","StyledButton","button","Button","onClick","PositionOutline","player1","player2","position","textAlign","color","ResultTab","teams","team1","team2","top","jungle","mid","adc","support","PlayerLayout","ButtonPane","ResultLayout","Main","searchForErrors","errorsFound","players","length","filter","e","trim","undefined","useState","Array","from","_","idx","setPlayers","result","setResult","isLoading","setLoadingState","submitted","setSubmitStatus","map","playerId","newName","copiedPlayers","handleChange","target","Error","shuffled","sort","Math","random","splitPlayers","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85ed22c1.chunk.js","sourcesContent":["import styled from \"styled-components\"\r\n\r\nconst Wrapper = styled.footer`\r\n    margin-top: auto;\r\n    color: whitesmoke;\r\n    text-align: center;\r\n    font-size: 0.75em;\r\n    padding: 10px;\r\n`\r\n\r\nexport const Footer = () => {\r\n    return <Wrapper>Â© 2021 - Krymeq - All Rights Reversed</Wrapper>\r\n}","import styled from \"styled-components\"\r\n\r\nconst HeaderRoot = styled.div`\r\n    color: #bbc;\r\n    text-align: center;\r\n    padding: 1em;\r\n    font-size: 2.2em;\r\n`\r\n\r\nexport const Header = () => {\r\n    return <HeaderRoot>EPIC TEAM SPLITTER</HeaderRoot>\r\n}","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Root = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n    padding: 8px;\r\n    background-color: inherit;\r\n    color: inherit;\r\n    border: none;\r\n    border-bottom: 2px solid #669;\r\n    transition: all 0.1s ease-in;\r\n    &:hover {\r\n        border-bottom-color: white;\r\n    }\r\n\r\n    &:focus {\r\n        outline: none;\r\n        background: #445;\r\n    }\r\n`\r\n\r\nconst ErrorMessage = styled.div`\r\n    color: red;\r\n    font-size: 0.7em;\r\n`\r\n\r\ninterface Props {\r\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    text: string;\r\n    hint?: string;\r\n    error?: string;\r\n}\r\n\r\nexport const Input = ({ text, onChange, hint, error }: Props) => {\r\n    return (\r\n        <Root>\r\n            <StyledInput\r\n                value={text}\r\n                onChange={onChange}\r\n                placeholder={hint}\r\n                style={error ? {\r\n                    borderBottomColor: \"red\"\r\n                } : {}} />\r\n            {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        </Root>\r\n    )\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Player } from \"../entities/player\";\r\nimport { Input } from \"./Input\";\r\n\r\nconst Root = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    color: white;\r\n    padding: 6px;\r\n`\r\n\r\nconst Span = styled.span`\r\n    display: inline-block;\r\n    min-width: 2em;\r\n`\r\n\r\ninterface Props {\r\n    player: Player;\r\n    error: string | undefined;\r\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport const PlayerTab = ({ player, error, onChange }: Props) => {\r\n    return (\r\n        <Root>\r\n            <Span>{player.id + 1}</Span>\r\n            <Input\r\n                text={player.nick}\r\n                onChange={onChange}\r\n                hint=\"Podaj nick\"\r\n                error={error}\r\n            />\r\n        </Root>\r\n    );\r\n}","import styled from \"styled-components\"\r\n\r\nconst StyledButton = styled.button`\r\n    background-color: inherit;\r\n    color: white;\r\n    padding: 7px 20px;\r\n    border: none;\r\n    transition: all 0.1s ease-in;\r\n    box-shadow: 0 0 1px 1px #669;\r\n    &:hover {\r\n        background-color: #669;\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\ninterface Props {\r\n    onClick: () => void;\r\n    text: string;\r\n}\r\n\r\nexport const Button = ({onClick, text}: Props) => {\r\n    return <StyledButton onClick={onClick}>\r\n        {text}\r\n    </StyledButton>\r\n}","import { Player } from \"../entities/player\";\r\n\r\ninterface Props {\r\n    player1: Player;\r\n    player2: Player;\r\n    position: string;\r\n}\r\n\r\nexport const PositionOutline = ({\r\n    player1,\r\n    player2,\r\n    position\r\n}: Props) => {\r\n    return <>\r\n        <div style={{textAlign: \"right\"}}>{player1.nick}</div>\r\n        <div style={{color:\"#aad\"}}>{position}</div>\r\n        <div>{player2.nick}</div>\r\n    </>\r\n}","import styled from \"styled-components\";\r\nimport { Team } from \"../entities/team\";\r\nimport { PositionOutline } from \"./PositionOutline\";\r\n\r\nconst Root = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 3fr 2fr 3fr;\r\n    grid-template-rows: repeat(6, 1fr);\r\n    column-gap: 15px;\r\n    row-gap: 5px;\r\n    color: #ddd;\r\n`\r\n\r\nconst Span = styled.span`\r\n    color: #669;\r\n`\r\n\r\ninterface Props {\r\n    teams: { team1: Team, team2: Team };\r\n}\r\n\r\nexport const ResultTab = ({teams}: Props) => {\r\n    const {team1, team2} = teams;\r\n    return (\r\n        <Root>\r\n            <Span style={{textAlign: \"right\"}}>Team 1</Span><Span></Span><Span>Team 2</Span>\r\n            <PositionOutline position=\"Top\" player1={team1.top} player2={team2.top}/>\r\n            <PositionOutline position=\"Jungle\" player1={team1.jungle} player2={team2.jungle}/>\r\n            <PositionOutline position=\"Mid\" player1={team1.mid} player2={team2.mid}/>\r\n            <PositionOutline position=\"ADC\" player1={team1.adc} player2={team2.adc}/>\r\n            <PositionOutline position=\"Supp\" player1={team1.support} player2={team2.support}/>\r\n        </Root>\r\n    );\r\n}","import { Player } from \"../entities/player\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\"\r\nimport { PlayerTab } from \"./PlayerTab\";\r\nimport { Button } from \"./Button\";\r\nimport { Team } from \"../entities/team\";\r\nimport { ResultTab } from \"./ResultTab\";\r\nimport { splitPlayers } from \"../utils/split-teams\";\r\n\r\nconst Root = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    @media (max-width: 768px) {\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n`\r\n\r\nconst PlayerLayout = styled.div`\r\n    padding: 0.7em;\r\n`\r\n\r\nconst ButtonPane = styled.div`\r\n    padding: 1em 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\n\r\nconst ResultLayout = styled.div`\r\n    padding: 0.7em;\r\n`\r\n\r\nexport const Main = () => {\r\n    const searchForErrors = (): boolean => {\r\n        let errorsFound = false;\r\n        for (const player of players) {\r\n            if (player.nick.length === 0) {\r\n                errorsFound = true;\r\n                player.error = \"Nazwa nie moÅ¼e byÄ pusta\";\r\n            } else if (players\r\n                .filter(e => e.nick.trim() === player.nick.trim())\r\n                .length > 1) {\r\n                errorsFound = true;\r\n                player.error = \"Nazwa nie jest unikalna!\"\r\n            } else {\r\n                player.error = undefined;\r\n            }\r\n        }\r\n        return errorsFound;\r\n    }\r\n\r\n    const handleChange = (players: Player[], playerId: number, newName: string) => {\r\n        if (newName.length > 17) return;\r\n        const copiedPlayers = [...players];\r\n        const player = copiedPlayers[playerId];\r\n\r\n        player.nick = newName;\r\n        copiedPlayers[playerId] = player;\r\n        setPlayers(copiedPlayers);\r\n\r\n        if (submitted) {\r\n            searchForErrors();\r\n        }\r\n    }\r\n\r\n    const assignPlayers = () => {\r\n        if (!searchForErrors()) {\r\n            setLoadingState(true);\r\n            setResult(splitPlayers(players));\r\n            setLoadingState(false);\r\n        } else {\r\n            if (!submitted) {\r\n                setSubmitStatus(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    // initial state; creates 10 players with empty nicks\r\n    const [players, setPlayers] = useState<Player[]>(\r\n        Array.from({ length: 10 },\r\n            (_, idx) => {\r\n                return { id: idx, nick: \"\" }\r\n            }\r\n        ));\r\n\r\n    const [result, setResult] = useState<{\r\n        team1: Team,\r\n        team2: Team\r\n    } | undefined>(undefined);\r\n\r\n    const [isLoading, setLoadingState] = useState<boolean>(false);\r\n    const [submitted, setSubmitStatus] = useState<boolean>(false);\r\n\r\n    return (\r\n        <Root>\r\n            <PlayerLayout>\r\n                {players.map(player =>\r\n                    <PlayerTab\r\n                        key={player.id}\r\n                        player={player}\r\n                        error={player.error}\r\n                        onChange={e =>\r\n                            handleChange(players, player.id, e.target.value)}\r\n                    />)\r\n                }\r\n                <ButtonPane>\r\n                    <Button onClick={assignPlayers} text=\"Podziel\" />\r\n                    <Button onClick={() => setResult(undefined)} text=\"WyczyÅÄ\" />\r\n                </ButtonPane>\r\n            </PlayerLayout>\r\n            { isLoading\r\n                ? <span style={{ color: \"white\" }}>Tworzenie druÅ¼yn...</span>\r\n                : result && <ResultLayout>\r\n                    <ResultTab teams={result} />\r\n                </ResultLayout>\r\n            }\r\n        </Root>\r\n    );\r\n}","import { Player } from \"../entities/player\";\r\nimport { Team } from \"../entities/team\";\r\n\r\nexport const splitPlayers = (players: Player[]): {team1: Team, team2: Team} => {\r\n    if (players.length < 10) throw new Error('Not enough players!');\r\n    const shuffled = [...players].sort(() => Math.random() - 0.5);\r\n    \r\n    return {\r\n        team1: {\r\n            top: shuffled[0],\r\n            jungle: shuffled[1],\r\n            mid: shuffled[2],\r\n            adc: shuffled[3],\r\n            support: shuffled[4]\r\n        },\r\n        team2: {\r\n            top: shuffled[5],\r\n            jungle: shuffled[6],\r\n            mid: shuffled[7],\r\n            adc: shuffled[8],\r\n            support: shuffled[9]\r\n        }\r\n    };\r\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { Footer } from './components/Footer';\nimport { Header } from './components/Header';\nimport { Main } from './components/Main';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`\n\nfunction App() {\n  return (\n    <Root>\n      <Header />\n      <Main />\n      <Footer />\n    </Root>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}